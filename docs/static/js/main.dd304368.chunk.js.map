{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GIfGridItem.js","components/GIfGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GIfGridItem","className","src","alt","GIfGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAsBhD,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAtBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,aA2B3BZ,EAAYe,WAAa,CACvBd,cAAee,IAAUC,KAAKC,Y,mCCnCnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAWH,GAH/C,8DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACpBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAEGqB,EDXyBK,CAAa1B,GAA/Ba,EAHyB,EAG9BN,KAAYa,EAHkB,EAGlBA,QAEnB,OACI,qCACI,6BAAOpB,IACLoB,GAAW,mBAAGJ,UAAU,uCAAb,yBACb,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAI,SAAAC,GAAG,OACN,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBgB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAC7C,YAH8B,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAQhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAGE+C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCjBpB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dd304368.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setcategories }) => {\n    \n  //para saber lo que la persona esta escribiendo se ncesita tener un estado en el input\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  //manejamos un enter en el input\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //una validacion para que no sea vacio\n    if (inputValue.trim().length > 2) {\n      setcategories((cats) => [inputValue,...cats]);\n      setInputValue(\"\");\n    }\n\n    //validamos que cuando halla un nuevo componente en la lista haga la peticion HTTP\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\" \n        value={inputValue} \n        onChange={handleInputChange}\n        />\n    </form>\n  );\n};\n\nAddCategory.prototypes = {\n  setcategories: PropTypes.func.isRequired,\n};\n","\n\nexport const getGifs = async( category )=>{\n    //encodeURI(): remplaza los espacios por porcentaje o alguna otra cosa para que pueda ser valida la busqueda\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=5&api_key=4YUwstEQP72nAiRk1akZMJhHJp5H2Pme`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    } )\n\n    return gifs;\n}","import React from 'react'\n\nexport const GIfGridItem = ( {id, title, url} ) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react' \nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport {GIfGridItem} from './GIfGridItem'\n\n\nexport const GIfGrid = ({ category }) => {\n    // se recibe la categoria(category) y se va hacer peticion HTTP\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 >{ category }</h3>\n            { loading && <p className=\"animate__animated animate__headShake\">Cargando...</p> }\n            <div className='card-grid'>\n            \n                {\n                images.map(img=>(\n                        <GIfGridItem \n                            key={img.id}\n                            {...img}/>\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"; //useEffect: me permite ejecutar sierto codigo de una manera condicional\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {// se ejecuta esta instruccion cuando el componente es renderizado por primera vez\n    getGifs(category).then((imgs) => {\n        setstate({\n          data: imgs,\n          loading: false,\n        });\n      \n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GIfGrid } from \"./components/GIfGrid\";\n\nexport const GifExpertApp = () => {\n  \n    const [categories, setcategories] = useState([\n    \"Mad Max\",\n  ]);\n\n  //Se crea otro componente que recibira categories como argumento \"GifGrid.js\"\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setcategories={ setcategories } />\n      <hr />\n\n      <ol>\n        {/* Se utilizara una expresion que recorra cada uno de los elementos del arreglo*/}\n        {\n        categories.map(category => (\n           <GIfGrid //lista de gifs\n              key={ category }\n              category={ category }\n            />\n        ))\n      }\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr /> "],"sourceRoot":""}